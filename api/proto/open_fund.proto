

syntax = "proto3";

import "google/api/annotations.proto";
import "common.proto";

package grpcapi;
option java_package = "com.gf.va.api.grpcapi";

// 开放式基金
service OpenFund {
    // 基金认购
    rpc OpenFundSub (OpenFundSubReq) returns (OpenFundEntrustResp) {
        option (google.api.http) = {
            post: "/ofund/sub"
            body: "*"
        };
    }

    // 基金申购
    rpc OpenFundApply (OpenFundApplyReq) returns (OpenFundEntrustResp) {
        option (google.api.http) = {
            post: "/ofund/apply"
            body: "*"
        };
    }
    
    // 基金赎回
    rpc OpenFundRedeem (OpenFundRedeemReq) returns (OpenFundEntrustResp) {
        option (google.api.http) = {
            post: "/ofund/redeem"
            body: "*"
        };
    }

    // 基金委托撤单
    rpc OpenFundWithdraw (OpenFundWithdrawReq) returns (OpenFundEntrustResp) {
        option (google.api.http) = {
            post: "/ofund/withdraw"
            body: "*"
        };
    }

    // 基金转换
    rpc OpenFundTrans (OpenFundTransReq) returns (OpenFundEntrustResp) {
        option (google.api.http) = {
            post: "/ofund/trans"
            body: "*"
        };
    }

    // 基金预约认购
    rpc OpenFundAdvSub (OpenFundAdvSubReq) returns (OpenFundEntrustResp) {
        option (google.api.http) = {
            post: "/ofund/advsub"
            body: "*"
        };
    }

    // 基金预约申购
    rpc OpenFundAdvApply (OpenFundAdvApplyReq) returns (OpenFundEntrustResp) {
        option (google.api.http) = {
            post: "/ofund/advapply"
            body: "*"
        };
    }

    // 基金预约赎回
    rpc OpenFundAdvRedeem (OpenFundAdvRedeemReq) returns (OpenFundEntrustResp) {
        option (google.api.http) = {
            post: "/ofund/advredeem"
            body: "*"
        };
    }

    // 基金预约转换
    rpc OpenFundAdvTrans (OpenFundAdvTransReq) returns (OpenFundEntrustResp) {
        option (google.api.http) = {
            post: "/ofund/advtrans"
            body: "*"
        };
    }

    // 基金预约委托撤单
    rpc OpenFundAdvWithdraw (OpenFundAdvWithdrawReq) returns (OpenFundEntrustResp) {
        option (google.api.http) = {
            post: "/ofund/advwithdraw"
            body: "*"
        };
    }

    // 查询资产单元的委托列表
    rpc ListOFEntrust (QueryOFEntrustReq) returns (ListOFEntrustResp) {
        option (google.api.http) = {
            get: "/ofund/entrust/list"
        };
    }
   
    // 查询资产单元的当前持仓
    rpc ListOFStock(QueryOFStockReq) returns (ListOFStockResp) {
        option (google.api.http) = {
            get: "/ofund/stock/list"
        };
    }
    // 查询资产单元的持仓变动流水
    rpc ListOFStockJour (QueryOFStockJourReq) returns (ListOFStockJourResp) {
        option (google.api.http) = {
            get: "/ofund/stock/jour/list"
        };
    }
   
}

// 基金认购
message OpenFundSubReq {
    BaseReq baseReq = 1; // 基础请求头
    TradeHeader tradeHeader = 2; // 交易请求头
    int64 clientId = 3; // 客户ID
    int64 projectId = 4; // 资产单元ID
    string stockCode = 5; // 基金代码
    double balance = 6; // 资金数量
    string chargeType = 7; // 收费类型, 0 前端, 1后端, 2 混合收费
}

// 基金申购
message OpenFundApplyReq {
    BaseReq baseReq = 1; // 基础请求头
    TradeHeader tradeHeader = 2; // 交易请求头
    int64 clientId = 3; // 客户ID
    int64 projectId = 4; // 资产单元ID
    string stockCode = 5; // 基金代码
    double balance = 6; // 资金数量
    string chargeType = 7; // 收费类型, 0 前端, 1后端, 2 混合收费
}

// 基金赎回
message OpenFundRedeemReq {
    BaseReq baseReq = 1; // 基础请求头
    TradeHeader tradeHeader = 2; // 交易请求头
    int64 clientId = 3; // 客户ID
    int64 projectId = 4; // 资产单元ID
    string stockCode = 5; // 基金代码 
    double amount = 6; // 份额
    string exceedFlag = 7; // 巨额赎回标志， 0 放弃， 1 顺延 
}

// 基金委托撤单
message OpenFundWithdrawReq {
    BaseReq baseReq = 1; // 基础请求头
    TradeHeader tradeHeader = 2; // 交易请求头
    int64 clientId = 3; // 客户ID
    int64 projectId = 4; // 资产单元ID
    string entrustId = 5; // 委托ID
}

// 基金转换
message OpenFundTransReq {
    BaseReq baseReq = 1; // 基础请求头
    TradeHeader tradeHeader = 2; // 交易请求头
    int64 clientId = 3; // 客户ID
    int64 projectId = 4; // 资产单元ID
    string stockCode = 5; // 基金代码
    double amount = 6; // 份额
    string exceedFlag = 7; // 巨额赎回标志， 0 放弃， 1 顺延 
    string transCode = 8; // 目标基金代码
}

// 开基委托的响应消息
message OpenFundEntrustResp {
    RespStatus respStatus = 1; // 结果状态
    string entrustId = 2; // 生成的委托ID
}

// 基金预约认购
message OpenFundAdvSubReq {
    BaseReq baseReq = 1; // 基础请求头
    TradeHeader tradeHeader = 2; // 交易请求头
    int64 clientId = 3; // 客户ID
    int64 projectId = 4; // 资产单元ID
    string stockCode = 5; // 基金代码
    double balance = 6; // 认购金额
    string chargeType = 7; // 前后收费类型
    int64 hopeDate = 8; // 希望处理日期（预约日期）
}

// 基金预约申购
message OpenFundAdvApplyReq {
    BaseReq baseReq = 1; // 基础请求头
    TradeHeader tradeHeader = 2; // 交易请求头
    int64 clientId = 3; // 客户ID
    int64 projectId = 4; // 资产单元ID
    string stockCode = 5; // 申购基金代码
    double balance = 6; // 申购金额
    string chargeType = 7; // 前后收费类型
    int64 hopeDate = 8; // 希望处理日期（预约日期）
}

// 基金赎回
message OpenFundAdvRedeemReq {
    BaseReq baseReq = 1; // 基础请求头
    TradeHeader tradeHeader = 2; // 交易请求头
    int64 clientId = 3; // 客户ID
    int64 projectId = 4; // 资产单元ID
    string stockCode = 5; // 基金代码 
    double amount = 6; // 份额
    string exceedFlag = 7; // 巨额赎回标志， 0 放弃， 1 顺延 
    int64 hopeDate = 8; // 希望处理日期（预约日期）
}

// 基金转换
message OpenFundAdvTransReq {
    BaseReq baseReq = 1; // 基础请求头
    TradeHeader tradeHeader = 2; // 交易请求头
    int64 clientId = 3; // 客户ID
    int64 projectId = 4; // 资产单元ID
    string stockCode = 5; // 基金代码
    double amount = 6; // 份额
    string exceedFlag = 7; // 巨额赎回标志， 0 放弃， 1 顺延 
    string transCode = 8; // 目标基金代码
    int64 hopeDate = 9; // 希望处理日期（预约日期）
}

// 基金预约委托撤单
message OpenFundAdvWithdrawReq {
    BaseReq baseReq = 1; // 基础请求头
    TradeHeader tradeHeader = 2; // 交易请求头
    int64 clientId = 3; // 客户ID
    int64 projectId = 4; // 资产单元ID
    string entrustId = 5; // 委托ID
}

//查询基金委托的消息
message QueryOFEntrustReq {
    BaseReq baseReq = 1; // 基础请求头
    PageInfo pageInfo = 2; // 分页
    int64 clientId = 3; // 客户ID
    int64 projectId = 4; // 资产单元ID
    string status = 5; // 委托确认状态,  0 未确认, 1 已确认, 2 取消; 可多选，逗号分隔;
    string businessFlag = 6; // 业务标志; 可多选，逗号分隔;
    string entrustStatus = 7; // 委托交易状态; 可多选，逗号分隔;
    string beginDate = 8; // 开始日期, 可选
    string endDate = 9; // 结束日期, 可选
}

// 基金委托的消息体
message OFEntrust {
    string id = 1; // 委托ID
    string joinNo = 2; // 关联外部ID
    string operatorType = 3; // 操作员类型
    string operator = 4; // 操作员
    string entrustWay = 5; // 委托方式
    int64 projectId = 6; // 资产单元ID
    int64 clientId = 7;  // 客户ID
    int64 fundAccountId = 8; // 资金帐号ID
    string extNo = 9; // 外部委托申请编号
    string entrustNo = 10; // 外部委托编号
    string originId = 11; // 原委托编号
    int64 initDate = 12; // 交易日期
    int64 hopeDate = 13; // 希望处理时间
    int64 dealDate = 14; // 成交时间
    int64 entrustDate = 15; // 委托时间
    int64 withdrawDate = 16; // 撤单时间
    string financeType = 17; // 金融品种, 0 资金, 1 股票, 3 开基
    string businessFlag = 18; // 业务标志
    string moneyType = 19; // 货币类型
    string exchangeType = 20; // 市场类型
    string stockType = 21; // 证券类别
    string stockCode = 22; // 证券代码
    string stockName = 23; // 证券名称
    string fundCompany = 24; // 基金公司
    string transCode = 25; // 转换代码
    string entrustType = 26; // 委托类型
    double entrustAmount = 27; // 委托数量
    double entrustPrice = 28; // 委托价格
    double entrustBalance = 29; // 委托金额
    string entrustStatus = 30; // 委托状态
    double dealAmount = 31; // 成交数量
    double dealPrice = 32; // 成交价格
    double dealBalance = 33; // 成交金额
    double frozenBalance = 34; // 冻结金额
    double tradeFee = 35; // 交易费用
    string exceedFlag = 36; // 巨额赎回处理办法
    string chargeType = 37; // 收费方式, 0 前端收费, 1 后端收费, 2 混合收费
    int32 status = 38; // 状态, 0 未确认, 1 已确认, 2 取消
    string remark = 39; // 描述说明
}

// 基金委托列表的响应消息
message ListOFEntrustResp {
    RespStatus respStatus = 1; // 结果状态
    PageInfo page = 2; // 页码
    repeated OFEntrust data = 3; // 委托列表
}

//查询资产单元的当前持仓
message QueryOFStockReq {
    BaseReq baseReq = 1; // 基础请求头
    PageInfo pageInfo = 2; // 页码
    int64 clientId = 3; // 客户ID
    int64 projectId = 4; // 资产单元ID
}
// 基金持仓的消息体
message OFStock {
    int64 projectId = 1; // 资产单元ID
    int64 clientId = 2; // 客户ID
    int64 fundAccountId = 3; // 资金帐户ID
    int64 initDate = 4; // 交易日期
    string fundCompany = 5; // 基金公司
    string exchangeType = 6; // 市场类型
    string stockType = 7; // 证券类别
    string stockCode = 8; // 证券代码
    string stockName = 9; // 证券名称
    string moneyType = 10; // 货币类型
    string chargeType = 11; // 前后收费类型
    double currentAmount = 12; // 当前份额
    double frozenAmount = 13; // 冻结份额
    double enableAmount = 14; // 可用份额
    double marketValue = 15; // 证券市值
    double costPrice = 16; // 成本价
    double nav = 17; // T-1日净值
    string remark = 18; // 描述说明
    int64 version = 19; // 修改版本
    int64 updateAt = 20; // 状态变更时间
}
// 基金持仓列表的响应消息
message ListOFStockResp {
    RespStatus respStatus = 1; // 结果状态
    PageInfo page = 2; // 页码
    repeated OFStock data = 3; // 持仓列表结果
}

//查询资产单元的当前持仓变动流水
message QueryOFStockJourReq {
    BaseReq baseReq = 1; // 基础请求头
    PageInfo pageInfo = 2; // 页码
    int64 clientId = 3; // 客户ID
    int64 projectId = 4; // 资产单元ID
}
// 基金持仓变动流水的消息体
message OFStockJour {
    int64 projectId = 1; // 资产单元ID
    int64 clientId = 2; // 客户ID
    int64 fundAccountId = 3; // 资金帐户ID
    int64 initDate = 4; // 交易日期
    string extNo = 5; //外部委托编号
    string financeType = 6; // 金融品种, 0 资金， 1 股票, 3 开基
    string businessFlag = 7; // 业务标志
    string src = 8; // 来源
    string fundCompany = 9; // 基金公司
    string exchangeType = 10; // 市场类型
    string stockType = 11; // 证券类别
    string stockCode = 12; // 证券代码
    string stockName = 13; // 证券名称
    string moneyType = 14; // 货币类型
    double occurCurrentAmount = 15; // 当前份额的发生数量
    double postCurrentAmount = 16; // 当前份额的后数量
    double occurFrozenAmount = 17; // 冻结份额的发生数量
    double postFrozenAmount = 18; // 冻结份额的后数量
    double occurEnableAmount = 19; // 可用份额的发生数量
    double postEnableAmount = 20; // 可用份额的后数量
    string remark = 21; // 描述说明
    int64 createAt = 22; // 创建日期
}
// 基金持仓变动流水列表的响应消息
message ListOFStockJourResp {
    RespStatus respStatus = 1; // 结果状态
    PageInfo page = 2; // 页码
    repeated OFStockJour data = 3; // 持仓变动流水列表结果
}



